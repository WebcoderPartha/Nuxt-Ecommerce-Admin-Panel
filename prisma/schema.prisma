generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id         Int        @id @default(autoincrement())
  fullname   String
  email      String     @unique
  username   String?
  password   String
  role       String
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  image      String?    @db.LongText
  order      order[]
  shipping   shipping?
  wishlist   wishlist[]
}

model category {
  id         Int       @id @default(autoincrement())
  name       String
  slug       String?   @db.LongText
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  image      String?   @db.LongText
  product    product[]
}

model order {
  id             Int           @id @default(autoincrement())
  userId         Int
  tcn            String
  quantity       String
  total_price    String
  payment_method String?
  order_date     String
  tran_id        String
  order_status   String?
  user           user          @relation(fields: [userId], references: [id], map: "Order_userId_fkey")
  orderdetail    orderdetail[]

  @@index([userId], map: "Order_userId_fkey")
}

model orderdetail {
  id           Int    @id @default(autoincrement())
  orderId      Int
  product_name String
  image        String @db.LongText
  quantity     String
  price        String
  subtotal     String
  order        order  @relation(fields: [orderId], references: [id], map: "OrderDetail_orderId_fkey")

  @@index([orderId], map: "OrderDetail_orderId_fkey")
}

model product {
  id             Int       @id @default(autoincrement())
  name           String
  regular_price  String
  discount       String
  discount_price String
  quantity       String
  slug           String?   @db.LongText
  categoryId     Int
  image          String    @db.LongText
  created_at     DateTime  @default(now())
  updated_at     DateTime  @updatedAt
  category       category  @relation(fields: [categoryId], references: [id], map: "Product_categoryId_fkey")
  wishlist       wishlist?

  @@index([categoryId], map: "Product_categoryId_fkey")
}

model shipping {
  id          Int     @id @default(autoincrement())
  address_one String  @db.Text
  address_two String? @db.Text
  thana       String  @db.Text
  zipecode    String
  city        String
  country     String
  userId      Int     @unique(map: "Shipping_userId_key")
  user        user    @relation(fields: [userId], references: [id], map: "Shipping_userId_fkey")
}

model wishlist {
  id        Int     @id @default(autoincrement())
  productId Int     @unique(map: "Wishlist_productId_key")
  userId    Int
  product   product @relation(fields: [productId], references: [id], map: "Wishlist_productId_fkey")
  user      user    @relation(fields: [userId], references: [id], map: "Wishlist_userId_fkey")

  @@index([userId], map: "Wishlist_userId_fkey")
}
